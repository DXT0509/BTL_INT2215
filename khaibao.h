SDL_Texture* background;
SDL_Texture* tau;
SDL_Texture* play1;
SDL_Texture* play2;
SDL_Texture* about1;
SDL_Texture* about2;
SDL_Texture* back1;
SDL_Texture* back2;
SDL_Texture* dan1;
SDL_Texture* chicken1;
SDL_Texture* chicken2;
SDL_Texture* chicken3;
SDL_Texture* longchim;
SDL_Texture* egg;
SDL_Texture* trungvo;
SDL_Texture* smoke;
SDL_Texture* vuno;
SDL_Texture* upgrade1;
SDL_Texture* upgrade2;
SDL_Texture* mot;
SDL_Texture* hai;
SDL_Texture* ba;
SDL_Texture* bon;
SDL_Texture* nam;
SDL_Texture* quado1;
SDL_Texture* quado2;
SDL_Texture* quado3;
SDL_Texture* quado4;
SDL_Texture* dando;
SDL_Texture* thunder;
SDL_Texture* quatrang1;
SDL_Texture* quatrang2;
SDL_Texture* quatrang3;
SDL_Texture* quatrang4;
SDL_Texture* logo;
SDL_Texture* remuse1;
SDL_Texture* remuse2;
SDL_Texture* exit1;
SDL_Texture* exit2;
SDL_Texture* menu1;
SDL_Texture* menu2;
SDL_Texture* metalegg;
SDL_Texture* fullegg;
SDL_Texture* brokenegg;
SDL_Texture* quavang1;
SDL_Texture* quavang2;
SDL_Texture* quavang3;
SDL_Texture* quavang4;
SDL_Texture* laserboss;
SDL_Renderer* renderer;
TTF_Font* font ;
Mix_Chunk *chickensound;
Mix_Chunk *gunsound;
Mix_Chunk *trungvosound;
Mix_Chunk *deadsound;
Mix_Chunk *blastersound;
SDL_Color textcolor ;
const double pi = M_PI;
bool quit = false ;
bool clickabout = false;
bool clickplay = false;
bool motionstart = false;
bool motionabout = false;
bool motionback = false;
bool bandan = false;
bool motionremuse = false;
bool motionexit = false;
bool motionmenu = false;
bool clickremuse = false;
bool clickexit= false;
bool clickmenu=false;
int time1 = 0 ;
int xbgr = 0 , ybgr = 0;
int sodan = 1;
int levelthunder = 70;
vector<pair<int,int>> bullet;
vector<pair<int,int>> bullettrai;
vector<pair<int,int>> bulletphai;
vector<pair<int,pair<int,int>>> info;
vector<pair<int,int>> vtlong;
vector<pair<int,int>> vtegg;
vector<pair<int,pair<int,int>>> vttrungvo;
vector<pair<int,pair<int,int>>> vtsmoke;
vector<pair<int,int>> vtupgrade;
pair<int,int> infoboss;
vector<pair<double,pair<double,double>>> skillboss;
int sizedanx , sizedany , sizegax , sizegay, sizetaux , sizetauy, sizeupx, sizeupy , sizequax, sizequay, sizebossx,sizebossy,sizedanbossx,sizedanbossy;
int live = 0 , disappear = 1;
int timeman3 = 0 ;
bool left = false , right = true;
SDL_Rect vtbackground;

void beforeinstart();
void instart();
void inabout();
void man1();
void solvegame();
void inlive();
void inplay(int x,int y);
void gameover();
void inman();
void inscore();
void xulygachet( int i);
void resetall();
void inremuse();
void inexit();
void inmenu();
void xulyesc();
void timestop();
void xulidan();
void manboss();

bool ktgiaonhau1(SDL_Rect rect1, double angle1, SDL_Rect rect2);
int score = 0 ;
int score1 = 0 ;
int man = 1 ;
int taux = 700, tauy=600;
int dead = 0;
int timeman = 200;
int timegame = 0;
int timegame1 = 0 ;
bool finishround[103];
int loaidan =1 ;
int hpboss = 100;
int timeendgame = 0 ;
bool danthunder = false;
bool clickesc = false;
vector<pair<int,pair<int,int>>> skill;
vector<pair<int,pair<int,int>>> hopqua;
vector<pair<int,int>> sample;
int chieudai = 1920 , chieurong = 965;
int giatlen = 0 ;
int resetga = 0;